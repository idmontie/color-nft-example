{
  "contractName": "KittyAccessControl",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Axiom Zen (https://www.axiomzen.co)\",\"details\":\"See the KittyCore contract documentation to understand how the various contract facets are arranged.\",\"events\":{\"ContractUpgrade(address)\":{\"details\":\"Emited when contract is upgraded - See README.md for updgrade plan\"}},\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"Called by any \\\"C-level\\\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage.\"},\"setCEO(address)\":{\"details\":\"Assigns a new address to act as the CEO. Only available to the current CEO.\",\"params\":{\"_newCEO\":\"The address of the new CEO\"}},\"setCFO(address)\":{\"details\":\"Assigns a new address to act as the CFO. Only available to the current CEO.\",\"params\":{\"_newCFO\":\"The address of the new CFO\"}},\"setCOO(address)\":{\"details\":\"Assigns a new address to act as the COO. Only available to the current CEO.\",\"params\":{\"_newCOO\":\"The address of the new COO\"}},\"unpause()\":{\"details\":\"Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised.\"}},\"title\":\"A facet of KittyCore that manages special access privileges.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/KittyAccessControl.sol\":\"KittyAccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"project:/contracts/KittyAccessControl.sol\":{\"keccak256\":\"0xa1d9627e1e69bab28a2eb53d0875793049f03d13bbd96d47ce08157888f6504f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://31d1895c18543247ee4c17527ed3e313a7d86ff0383972c2408dec7e736d3c79\",\"dweb:/ipfs/QmdKibHkBwkjvDXxJtYvTEWRTYCeMKBeyNzTBFHpoagEAt\"]}},\"version\":1}",
  "bytecode": "0x60806040526002805460ff60a01b1916905534801561001d57600080fd5b506103858061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80633f4ba83a116100765780635c975abb1161005b5780635c975abb1461012e5780638456cb5914610152578063b047fb501461015a576100a3565b80633f4ba83a146101135780634e0a33791461011b576100a3565b80630519ce79146100a85780630a0f8168146100d857806327d7874c146100eb5780632ba73c1514610100575b600080fd5b6001546100bb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100bb906001600160a01b031681565b6100fe6100f9366004610321565b61016d565b005b6100fe61010e366004610321565b6101c6565b6100fe61021f565b6100fe610129366004610321565b61025b565b60025461014290600160a01b900460ff1681565b60405190151581526020016100cf565b6100fe6102b4565b6002546100bb906001600160a01b031681565b6000546001600160a01b0316331461018457600080fd5b6001600160a01b03811661019757600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101dd57600080fd5b6001600160a01b0381166101f057600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461023657600080fd5b600254600160a01b900460ff1661024c57600080fd5b6002805460ff60a01b19169055565b6000546001600160a01b0316331461027257600080fd5b6001600160a01b03811661028557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002546001600160a01b03163314806102d757506000546001600160a01b031633145b806102ec57506001546001600160a01b031633145b6102f557600080fd5b600254600160a01b900460ff161561030c57600080fd5b6002805460ff60a01b1916600160a01b179055565b600060208284031215610332578081fd5b81356001600160a01b0381168114610348578182fd5b939250505056fea2646970667358221220d7034e1222fc69aa37471df8b77e6455b77976f3558b0f95318fb7c7acc8155264736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a35760003560e01c80633f4ba83a116100765780635c975abb1161005b5780635c975abb1461012e5780638456cb5914610152578063b047fb501461015a576100a3565b80633f4ba83a146101135780634e0a33791461011b576100a3565b80630519ce79146100a85780630a0f8168146100d857806327d7874c146100eb5780632ba73c1514610100575b600080fd5b6001546100bb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100bb906001600160a01b031681565b6100fe6100f9366004610321565b61016d565b005b6100fe61010e366004610321565b6101c6565b6100fe61021f565b6100fe610129366004610321565b61025b565b60025461014290600160a01b900460ff1681565b60405190151581526020016100cf565b6100fe6102b4565b6002546100bb906001600160a01b031681565b6000546001600160a01b0316331461018457600080fd5b6001600160a01b03811661019757600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101dd57600080fd5b6001600160a01b0381166101f057600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6000546001600160a01b0316331461023657600080fd5b600254600160a01b900460ff1661024c57600080fd5b6002805460ff60a01b19169055565b6000546001600160a01b0316331461027257600080fd5b6001600160a01b03811661028557600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6002546001600160a01b03163314806102d757506000546001600160a01b031633145b806102ec57506001546001600160a01b031633145b6102f557600080fd5b600254600160a01b900460ff161561030c57600080fd5b6002805460ff60a01b1916600160a01b179055565b600060208284031215610332578081fd5b81356001600160a01b0381168114610348578182fd5b939250505056fea2646970667358221220d7034e1222fc69aa37471df8b77e6455b77976f3558b0f95318fb7c7acc8155264736f6c63430008030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:792:29",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:29",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "92:259:29",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "138:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:29"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "155:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "140:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "140:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "140:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "113:7:29"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "122:9:29"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "109:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "109:23:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "134:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "105:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "105:32:29"
                  },
                  "nodeType": "YulIf",
                  "src": "102:2:29"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "173:36:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:29"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "186:12:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "186:23:29"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "177:5:29",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "295:26:29",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "304:6:29"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "312:6:29"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "297:6:29"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "297:22:29"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "297:22:29"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:29"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:29"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "249:42:29",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:54:29"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:65:29"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:73:29"
                  },
                  "nodeType": "YulIf",
                  "src": "218:2:29"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "330:15:29",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "340:5:29"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "330:6:29"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "58:9:29",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "69:7:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "81:6:29",
                "type": ""
              }
            ],
            "src": "14:337:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "473:125:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "483:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "495:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "506:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "491:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "491:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "483:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "525:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "540:6:29"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "548:42:29",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "536:3:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "536:55:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "518:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "518:74:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "518:74:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "442:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "453:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "464:4:29",
                "type": ""
              }
            ],
            "src": "356:242:29"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "698:92:29",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "708:26:29",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "720:9:29"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "731:2:29",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "716:3:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:18:29"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "708:4:29"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:29"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "775:6:29"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "768:6:29"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "768:14:29"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "761:6:29"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "761:22:29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:29"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:41:29"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:41:29"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "667:9:29",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "678:6:29",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "689:4:29",
                "type": ""
              }
            ],
            "src": "603:187:29"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 29,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "294:4114:17:-:0;;;1907:26;;;-1:-1:-1;;;;1907:26:17;;;294:4114;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "294:4114:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1728:33;;;;;-1:-1:-1;;;;;1728:33:17;;;;;;-1:-1:-1;;;;;536:55:29;;;518:74;;506:2;491:18;1728:33:17;;;;;;;;1689;;;;;-1:-1:-1;;;;;1689:33:17;;;2696:136;;;;;;:::i;:::-;;:::i;:::-;;3258;;;;;;:::i;:::-;;:::i;4272:134::-;;;:::i;2977:136::-;;;;;;:::i;:::-;;:::i;1907:26::-;;;;;-1:-1:-1;;;1907:26:17;;;;;;;;;768:14:29;;761:22;743:41;;731:2;716:18;1907:26:17;698:92:29;3903:81:17;;;:::i;1767:33::-;;;;;-1:-1:-1;;;;;1767:33:17;;;2696:136;2047:10;;-1:-1:-1;;;;;2047:10:17;2033;:24;2025:33;;;;;;-1:-1:-1;;;;;2772:21:17;::::1;2764:30;;;::::0;::::1;;2805:10;:20:::0;;-1:-1:-1;;2805:20:17::1;-1:-1:-1::0;;;;;2805:20:17;;;::::1;::::0;;;::::1;::::0;;2696:136::o;3258:::-;2047:10;;-1:-1:-1;;;;;2047:10:17;2033;:24;2025:33;;;;;;-1:-1:-1;;;;;3334:21:17;::::1;3326:30;;;::::0;::::1;;3367:10;:20:::0;;-1:-1:-1;;3367:20:17::1;-1:-1:-1::0;;;;;3367:20:17;;;::::1;::::0;;;::::1;::::0;;3258:136::o;4272:134::-;2047:10;;-1:-1:-1;;;;;2047:10:17;2033;:24;2025:33;;;;;;3725:6:::1;::::0;-1:-1:-1;;;3725:6:17;::::1;;;3717:15;;;::::0;::::1;;4385:6:::2;:14:::0;;-1:-1:-1;;;;4385:14:17::2;::::0;;4272:134::o;2977:136::-;2047:10;;-1:-1:-1;;;;;2047:10:17;2033;:24;2025:33;;;;;;-1:-1:-1;;;;;3053:21:17;::::1;3045:30;;;::::0;::::1;;3086:10;:20:::0;;-1:-1:-1;;3086:20:17::1;-1:-1:-1::0;;;;;3086:20:17;;;::::1;::::0;;;::::1;::::0;;2977:136::o;3903:81::-;2433:10;;-1:-1:-1;;;;;2433:10:17;2419;:24;;:64;;-1:-1:-1;2473:10:17;;-1:-1:-1;;;;;2473:10:17;2459;:24;2419:64;:104;;;-1:-1:-1;2513:10:17;;-1:-1:-1;;;;;2513:10:17;2499;:24;2419:104;2398:135;;;;;;3584:6:::1;::::0;-1:-1:-1;;;3584:6:17;::::1;;;3583:7;3575:16;;;::::0;::::1;;3964:6:::2;:13:::0;;-1:-1:-1;;;;3964:13:17::2;-1:-1:-1::0;;;3964:13:17::2;::::0;;3903:81::o;14:337:29:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;199:9;186:23;-1:-1:-1;;;;;242:5:29;238:54;231:5;228:65;218:2;;312:6;304;297:22;218:2;340:5;92:259;-1:-1:-1;;;92:259:29:o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\n/// @title A facet of KittyCore that manages special access privileges.\n/// @author Axiom Zen (https://www.axiomzen.co)\n/// @dev See the KittyCore contract documentation to understand how the various contract facets are arranged.\ncontract KittyAccessControl {\n    // This facet controls access control for CryptoKitties. There are four roles managed here:\n    //\n    //     - The CEO: The CEO can reassign other roles and change the addresses of our dependent smart\n    //         contracts. It is also the only role that can unpause the smart contract. It is initially\n    //         set to the address that created the smart contract in the KittyCore constructor.\n    //\n    //     - The CFO: The CFO can withdraw funds from KittyCore and its auction contracts.\n    //\n    //     - The COO: The COO can release gen0 kitties to auction, and mint promo cats.\n    //\n    // It should be noted that these roles are distinct without overlap in their access abilities, the\n    // abilities listed for each role above are exhaustive. In particular, while the CEO can assign any\n    // address to any role, the CEO address itself doesn't have the ability to act in those roles. This\n    // restriction is intentional so that we aren't tempted to use the CEO address frequently out of\n    // convenience. The less we use an address, the less likely it is that we somehow compromise the\n    // account.\n\n    /// @dev Emited when contract is upgraded - See README.md for updgrade plan\n    event ContractUpgrade(address newContract);\n\n    // The addresses of the accounts (or contracts) that can execute actions within each roles.\n    address payable public ceoAddress;\n    address payable public cfoAddress;\n    address payable public cooAddress;\n\n    // @dev Keeps track whether the contract is paused. When that is true, most actions are blocked\n    bool public paused = false;\n\n    /// @dev Access modifier for CEO-only functionality\n    modifier onlyCEO() {\n        require(msg.sender == ceoAddress);\n        _;\n    }\n\n    /// @dev Access modifier for CFO-only functionality\n    modifier onlyCFO() {\n        require(msg.sender == cfoAddress);\n        _;\n    }\n\n    /// @dev Access modifier for COO-only functionality\n    modifier onlyCOO() {\n        require(msg.sender == cooAddress);\n        _;\n    }\n\n    modifier onlyCLevel() {\n        require(\n            msg.sender == cooAddress ||\n            msg.sender == ceoAddress ||\n            msg.sender == cfoAddress\n        );\n        _;\n    }\n\n    /// @dev Assigns a new address to act as the CEO. Only available to the current CEO.\n    /// @param _newCEO The address of the new CEO\n    function setCEO(address payable _newCEO) external onlyCEO {\n        require(_newCEO != address(0));\n\n        ceoAddress = _newCEO;\n    }\n\n    /// @dev Assigns a new address to act as the CFO. Only available to the current CEO.\n    /// @param _newCFO The address of the new CFO\n    function setCFO(address payable _newCFO) external onlyCEO {\n        require(_newCFO != address(0));\n\n        cfoAddress = _newCFO;\n    }\n\n    /// @dev Assigns a new address to act as the COO. Only available to the current CEO.\n    /// @param _newCOO The address of the new COO\n    function setCOO(address payable _newCOO) external onlyCEO {\n        require(_newCOO != address(0));\n\n        cooAddress = _newCOO;\n    }\n\n    /*** Pausable functionality adapted from OpenZeppelin ***/\n\n    /// @dev Modifier to allow actions only when the contract IS NOT paused\n    modifier whenNotPaused() {\n        require(!paused);\n        _;\n    }\n\n    /// @dev Modifier to allow actions only when the contract IS paused\n    modifier whenPaused {\n        require(paused);\n        _;\n    }\n\n    /// @dev Called by any \"C-level\" role to pause the contract. Used only when\n    ///  a bug or exploit is detected and we need to limit damage.\n    function pause() external onlyCLevel whenNotPaused {\n        paused = true;\n    }\n\n    /// @dev Unpauses the smart contract. Can only be called by the CEO, since\n    ///  one reason we may pause the contract is when CFO or COO accounts are\n    ///  compromised.\n    /// @notice This is public rather than external so it can be called by\n    ///  derived contracts.\n    function unpause() virtual public onlyCEO whenPaused {\n        // can't unpause if contract was upgraded\n        paused = false;\n    }\n}\n",
  "sourcePath": "/Users/ivanmontiel/Desktop/workspace/nft-tutorial/nft/packages/nfts/contracts/KittyAccessControl.sol",
  "ast": {
    "absolutePath": "project:/contracts/KittyAccessControl.sol",
    "exportedSymbols": {
      "KittyAccessControl": [
        3680
      ]
    },
    "id": 3681,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3496,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:17"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3497,
          "nodeType": "StructuredDocumentation",
          "src": "64:230:17",
          "text": "@title A facet of KittyCore that manages special access privileges.\n @author Axiom Zen (https://www.axiomzen.co)\n @dev See the KittyCore contract documentation to understand how the various contract facets are arranged."
        },
        "fullyImplemented": true,
        "id": 3680,
        "linearizedBaseContracts": [
          3680
        ],
        "name": "KittyAccessControl",
        "nameLocation": "303:18:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3498,
              "nodeType": "StructuredDocumentation",
              "src": "1464:75:17",
              "text": "@dev Emited when contract is upgraded - See README.md for updgrade plan"
            },
            "id": 3502,
            "name": "ContractUpgrade",
            "nameLocation": "1550:15:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3500,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nameLocation": "1574:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3502,
                  "src": "1566:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:21:17"
            },
            "src": "1544:43:17"
          },
          {
            "constant": false,
            "functionSelector": "0a0f8168",
            "id": 3504,
            "mutability": "mutable",
            "name": "ceoAddress",
            "nameLocation": "1712:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1689:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3503,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1689:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0519ce79",
            "id": 3506,
            "mutability": "mutable",
            "name": "cfoAddress",
            "nameLocation": "1751:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1728:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3505,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1728:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b047fb50",
            "id": 3508,
            "mutability": "mutable",
            "name": "cooAddress",
            "nameLocation": "1790:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1767:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1767:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 3511,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "1919:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1907:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3509,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1907:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3510,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1928:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3522,
              "nodeType": "Block",
              "src": "2015:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3515,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2033:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2033:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3517,
                          "name": "ceoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3504,
                          "src": "2047:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2033:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2025:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3520,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:33:17"
                },
                {
                  "id": 3521,
                  "nodeType": "PlaceholderStatement",
                  "src": "2068:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3512,
              "nodeType": "StructuredDocumentation",
              "src": "1940:51:17",
              "text": "@dev Access modifier for CEO-only functionality"
            },
            "id": 3523,
            "name": "onlyCEO",
            "nameLocation": "2005:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:2:17"
            },
            "src": "1996:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3534,
              "nodeType": "Block",
              "src": "2157:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3527,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2175:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2175:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3529,
                          "name": "cfoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3506,
                          "src": "2189:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2175:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2167:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2167:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3532,
                  "nodeType": "ExpressionStatement",
                  "src": "2167:33:17"
                },
                {
                  "id": 3533,
                  "nodeType": "PlaceholderStatement",
                  "src": "2210:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3524,
              "nodeType": "StructuredDocumentation",
              "src": "2082:51:17",
              "text": "@dev Access modifier for CFO-only functionality"
            },
            "id": 3535,
            "name": "onlyCFO",
            "nameLocation": "2147:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:2:17"
            },
            "src": "2138:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3546,
              "nodeType": "Block",
              "src": "2299:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3539,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2317:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2317:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3541,
                          "name": "cooAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3508,
                          "src": "2331:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2317:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2309:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:33:17"
                },
                {
                  "id": 3545,
                  "nodeType": "PlaceholderStatement",
                  "src": "2352:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3536,
              "nodeType": "StructuredDocumentation",
              "src": "2224:51:17",
              "text": "@dev Access modifier for COO-only functionality"
            },
            "id": 3547,
            "name": "onlyCOO",
            "nameLocation": "2289:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2296:2:17"
            },
            "src": "2280:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3567,
              "nodeType": "Block",
              "src": "2388:163:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3550,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2419:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2419:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3552,
                              "name": "cooAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3508,
                              "src": "2433:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "2419:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3554,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2459:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2459:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3556,
                              "name": "ceoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3504,
                              "src": "2473:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "2459:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2419:64:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2499:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2499:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3561,
                            "name": "cfoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3506,
                            "src": "2513:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2499:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2419:104:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2398:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:135:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3565,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:135:17"
                },
                {
                  "id": 3566,
                  "nodeType": "PlaceholderStatement",
                  "src": "2543:1:17"
                }
              ]
            },
            "id": 3568,
            "name": "onlyCLevel",
            "nameLocation": "2375:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2385:2:17"
            },
            "src": "2366:185:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3589,
              "nodeType": "Block",
              "src": "2754:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3577,
                          "name": "_newCEO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3571,
                          "src": "2772:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2791:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2783:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3578,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2783:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2783:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2772:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2764:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3584,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:30:17"
                },
                {
                  "expression": {
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3585,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3504,
                      "src": "2805:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3586,
                      "name": "_newCEO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3571,
                      "src": "2818:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2805:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3569,
              "nodeType": "StructuredDocumentation",
              "src": "2557:134:17",
              "text": "@dev Assigns a new address to act as the CEO. Only available to the current CEO.\n @param _newCEO The address of the new CEO"
            },
            "functionSelector": "27d7874c",
            "id": 3590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3573,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "2746:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2746:7:17"
              }
            ],
            "name": "setCEO",
            "nameLocation": "2705:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3571,
                  "mutability": "mutable",
                  "name": "_newCEO",
                  "nameLocation": "2728:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3590,
                  "src": "2712:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2712:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2711:25:17"
            },
            "returnParameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2754:0:17"
            },
            "scope": 3680,
            "src": "2696:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3611,
              "nodeType": "Block",
              "src": "3035:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3599,
                          "name": "_newCFO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3593,
                          "src": "3053:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3072:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3064:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3064:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3053:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3045:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3606,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:30:17"
                },
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3607,
                      "name": "cfoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3506,
                      "src": "3086:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3608,
                      "name": "_newCFO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "3099:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3086:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3591,
              "nodeType": "StructuredDocumentation",
              "src": "2838:134:17",
              "text": "@dev Assigns a new address to act as the CFO. Only available to the current CEO.\n @param _newCFO The address of the new CFO"
            },
            "functionSelector": "4e0a3379",
            "id": 3612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3595,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "3027:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3027:7:17"
              }
            ],
            "name": "setCFO",
            "nameLocation": "2986:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3593,
                  "mutability": "mutable",
                  "name": "_newCFO",
                  "nameLocation": "3009:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "2993:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:25:17"
            },
            "returnParameters": {
              "id": 3597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3035:0:17"
            },
            "scope": 3680,
            "src": "2977:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3633,
              "nodeType": "Block",
              "src": "3316:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3621,
                          "name": "_newCOO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3615,
                          "src": "3334:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3353:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3345:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3622,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3345:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3334:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3326:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3326:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3628,
                  "nodeType": "ExpressionStatement",
                  "src": "3326:30:17"
                },
                {
                  "expression": {
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3629,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3508,
                      "src": "3367:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3630,
                      "name": "_newCOO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3615,
                      "src": "3380:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3367:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3632,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3613,
              "nodeType": "StructuredDocumentation",
              "src": "3119:134:17",
              "text": "@dev Assigns a new address to act as the COO. Only available to the current CEO.\n @param _newCOO The address of the new COO"
            },
            "functionSelector": "2ba73c15",
            "id": 3634,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3617,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "3308:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3308:7:17"
              }
            ],
            "name": "setCOO",
            "nameLocation": "3267:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3615,
                  "mutability": "mutable",
                  "name": "_newCOO",
                  "nameLocation": "3290:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "3274:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3273:25:17"
            },
            "returnParameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:17"
            },
            "scope": 3680,
            "src": "3258:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3643,
              "nodeType": "Block",
              "src": "3565:44:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3583:7:17",
                        "subExpression": {
                          "id": 3638,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3511,
                          "src": "3584:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3575:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:16:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3641,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:16:17"
                },
                {
                  "id": 3642,
                  "nodeType": "PlaceholderStatement",
                  "src": "3601:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3635,
              "nodeType": "StructuredDocumentation",
              "src": "3464:71:17",
              "text": "@dev Modifier to allow actions only when the contract IS NOT paused"
            },
            "id": 3644,
            "name": "whenNotPaused",
            "nameLocation": "3549:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:2:17"
            },
            "src": "3540:69:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3652,
              "nodeType": "Block",
              "src": "3707:43:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3648,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3511,
                        "src": "3725:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3717:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3650,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:15:17"
                },
                {
                  "id": 3651,
                  "nodeType": "PlaceholderStatement",
                  "src": "3742:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3645,
              "nodeType": "StructuredDocumentation",
              "src": "3615:67:17",
              "text": "@dev Modifier to allow actions only when the contract IS paused"
            },
            "id": 3653,
            "name": "whenPaused",
            "nameLocation": "3696:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:17"
            },
            "src": "3687:63:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3665,
              "nodeType": "Block",
              "src": "3954:30:17",
              "statements": [
                {
                  "expression": {
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3661,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "3964:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3973:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3964:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3664,
                  "nodeType": "ExpressionStatement",
                  "src": "3964:13:17"
                }
              ]
            },
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "3756:142:17",
              "text": "@dev Called by any \"C-level\" role to pause the contract. Used only when\n  a bug or exploit is detected and we need to limit damage."
            },
            "functionSelector": "8456cb59",
            "id": 3666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3656,
                  "name": "onlyCLevel",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3568,
                  "src": "3929:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3929:10:17"
              },
              {
                "id": 3659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3658,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3644,
                  "src": "3940:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3940:13:17"
              }
            ],
            "name": "pause",
            "nameLocation": "3912:5:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:2:17"
            },
            "returnParameters": {
              "id": 3660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3954:0:17"
            },
            "scope": 3680,
            "src": "3903:81:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3678,
              "nodeType": "Block",
              "src": "4325:81:17",
              "statements": [
                {
                  "expression": {
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3674,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "4385:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4394:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4385:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3677,
                  "nodeType": "ExpressionStatement",
                  "src": "4385:14:17"
                }
              ]
            },
            "documentation": {
              "id": 3667,
              "nodeType": "StructuredDocumentation",
              "src": "3990:277:17",
              "text": "@dev Unpauses the smart contract. Can only be called by the CEO, since\n  one reason we may pause the contract is when CFO or COO accounts are\n  compromised.\n @notice This is public rather than external so it can be called by\n  derived contracts."
            },
            "functionSelector": "3f4ba83a",
            "id": 3679,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3670,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3669,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "4306:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4306:7:17"
              },
              {
                "id": 3672,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3671,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3653,
                  "src": "4314:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4314:10:17"
              }
            ],
            "name": "unpause",
            "nameLocation": "4281:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:2:17"
            },
            "returnParameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:17"
            },
            "scope": 3680,
            "src": "4272:134:17",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3681,
        "src": "294:4114:17"
      }
    ],
    "src": "39:4370:17"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/KittyAccessControl.sol",
    "exportedSymbols": {
      "KittyAccessControl": [
        3680
      ]
    },
    "id": 3681,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3496,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:17"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3497,
          "nodeType": "StructuredDocumentation",
          "src": "64:230:17",
          "text": "@title A facet of KittyCore that manages special access privileges.\n @author Axiom Zen (https://www.axiomzen.co)\n @dev See the KittyCore contract documentation to understand how the various contract facets are arranged."
        },
        "fullyImplemented": true,
        "id": 3680,
        "linearizedBaseContracts": [
          3680
        ],
        "name": "KittyAccessControl",
        "nameLocation": "303:18:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3498,
              "nodeType": "StructuredDocumentation",
              "src": "1464:75:17",
              "text": "@dev Emited when contract is upgraded - See README.md for updgrade plan"
            },
            "id": 3502,
            "name": "ContractUpgrade",
            "nameLocation": "1550:15:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3500,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newContract",
                  "nameLocation": "1574:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3502,
                  "src": "1566:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:21:17"
            },
            "src": "1544:43:17"
          },
          {
            "constant": false,
            "functionSelector": "0a0f8168",
            "id": 3504,
            "mutability": "mutable",
            "name": "ceoAddress",
            "nameLocation": "1712:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1689:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3503,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1689:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0519ce79",
            "id": 3506,
            "mutability": "mutable",
            "name": "cfoAddress",
            "nameLocation": "1751:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1728:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3505,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1728:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b047fb50",
            "id": 3508,
            "mutability": "mutable",
            "name": "cooAddress",
            "nameLocation": "1790:10:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1767:33:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3507,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1767:15:17",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5c975abb",
            "id": 3511,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "1919:6:17",
            "nodeType": "VariableDeclaration",
            "scope": 3680,
            "src": "1907:26:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3509,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1907:4:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3510,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1928:5:17",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3522,
              "nodeType": "Block",
              "src": "2015:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3515,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2033:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2033:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3517,
                          "name": "ceoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3504,
                          "src": "2047:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2033:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2025:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2025:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3520,
                  "nodeType": "ExpressionStatement",
                  "src": "2025:33:17"
                },
                {
                  "id": 3521,
                  "nodeType": "PlaceholderStatement",
                  "src": "2068:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3512,
              "nodeType": "StructuredDocumentation",
              "src": "1940:51:17",
              "text": "@dev Access modifier for CEO-only functionality"
            },
            "id": 3523,
            "name": "onlyCEO",
            "nameLocation": "2005:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2012:2:17"
            },
            "src": "1996:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3534,
              "nodeType": "Block",
              "src": "2157:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3527,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2175:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2175:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3529,
                          "name": "cfoAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3506,
                          "src": "2189:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2175:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2167:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2167:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3532,
                  "nodeType": "ExpressionStatement",
                  "src": "2167:33:17"
                },
                {
                  "id": 3533,
                  "nodeType": "PlaceholderStatement",
                  "src": "2210:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3524,
              "nodeType": "StructuredDocumentation",
              "src": "2082:51:17",
              "text": "@dev Access modifier for CFO-only functionality"
            },
            "id": 3535,
            "name": "onlyCFO",
            "nameLocation": "2147:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:2:17"
            },
            "src": "2138:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3546,
              "nodeType": "Block",
              "src": "2299:61:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3539,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2317:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2317:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3541,
                          "name": "cooAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3508,
                          "src": "2331:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2317:24:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2309:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:33:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3544,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:33:17"
                },
                {
                  "id": 3545,
                  "nodeType": "PlaceholderStatement",
                  "src": "2352:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3536,
              "nodeType": "StructuredDocumentation",
              "src": "2224:51:17",
              "text": "@dev Access modifier for COO-only functionality"
            },
            "id": 3547,
            "name": "onlyCOO",
            "nameLocation": "2289:7:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2296:2:17"
            },
            "src": "2280:80:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3567,
              "nodeType": "Block",
              "src": "2388:163:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3550,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2419:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2419:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3552,
                              "name": "cooAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3508,
                              "src": "2433:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "2419:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 3557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3554,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2459:3:17",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2459:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 3556,
                              "name": "ceoAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3504,
                              "src": "2473:10:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "2459:24:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2419:64:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3559,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2499:3:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2499:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3561,
                            "name": "cfoAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3506,
                            "src": "2513:10:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2499:24:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2419:104:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2398:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:135:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3565,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:135:17"
                },
                {
                  "id": 3566,
                  "nodeType": "PlaceholderStatement",
                  "src": "2543:1:17"
                }
              ]
            },
            "id": 3568,
            "name": "onlyCLevel",
            "nameLocation": "2375:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2385:2:17"
            },
            "src": "2366:185:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3589,
              "nodeType": "Block",
              "src": "2754:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3577,
                          "name": "_newCEO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3571,
                          "src": "2772:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2791:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2783:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3578,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2783:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2783:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2772:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3576,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2764:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3584,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:30:17"
                },
                {
                  "expression": {
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3585,
                      "name": "ceoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3504,
                      "src": "2805:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3586,
                      "name": "_newCEO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3571,
                      "src": "2818:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2805:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3588,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3569,
              "nodeType": "StructuredDocumentation",
              "src": "2557:134:17",
              "text": "@dev Assigns a new address to act as the CEO. Only available to the current CEO.\n @param _newCEO The address of the new CEO"
            },
            "functionSelector": "27d7874c",
            "id": 3590,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3574,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3573,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "2746:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "2746:7:17"
              }
            ],
            "name": "setCEO",
            "nameLocation": "2705:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3571,
                  "mutability": "mutable",
                  "name": "_newCEO",
                  "nameLocation": "2728:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3590,
                  "src": "2712:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2712:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2711:25:17"
            },
            "returnParameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2754:0:17"
            },
            "scope": 3680,
            "src": "2696:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3611,
              "nodeType": "Block",
              "src": "3035:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3599,
                          "name": "_newCFO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3593,
                          "src": "3053:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3072:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3601,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3064:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3064:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3064:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3053:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3598,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3045:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3045:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3606,
                  "nodeType": "ExpressionStatement",
                  "src": "3045:30:17"
                },
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3607,
                      "name": "cfoAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3506,
                      "src": "3086:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3608,
                      "name": "_newCFO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3593,
                      "src": "3099:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3086:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "3086:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3591,
              "nodeType": "StructuredDocumentation",
              "src": "2838:134:17",
              "text": "@dev Assigns a new address to act as the CFO. Only available to the current CEO.\n @param _newCFO The address of the new CFO"
            },
            "functionSelector": "4e0a3379",
            "id": 3612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3595,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "3027:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3027:7:17"
              }
            ],
            "name": "setCFO",
            "nameLocation": "2986:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3593,
                  "mutability": "mutable",
                  "name": "_newCFO",
                  "nameLocation": "3009:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3612,
                  "src": "2993:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2993:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2992:25:17"
            },
            "returnParameters": {
              "id": 3597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3035:0:17"
            },
            "scope": 3680,
            "src": "2977:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3633,
              "nodeType": "Block",
              "src": "3316:78:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3621,
                          "name": "_newCOO",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3615,
                          "src": "3334:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 3624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3353:1:17",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3345:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3622,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3345:7:17",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3345:10:17",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3334:21:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3326:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3326:30:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3628,
                  "nodeType": "ExpressionStatement",
                  "src": "3326:30:17"
                },
                {
                  "expression": {
                    "id": 3631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3629,
                      "name": "cooAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3508,
                      "src": "3367:10:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3630,
                      "name": "_newCOO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3615,
                      "src": "3380:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3367:20:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3632,
                  "nodeType": "ExpressionStatement",
                  "src": "3367:20:17"
                }
              ]
            },
            "documentation": {
              "id": 3613,
              "nodeType": "StructuredDocumentation",
              "src": "3119:134:17",
              "text": "@dev Assigns a new address to act as the COO. Only available to the current CEO.\n @param _newCOO The address of the new COO"
            },
            "functionSelector": "2ba73c15",
            "id": 3634,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3618,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3617,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "3308:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3308:7:17"
              }
            ],
            "name": "setCOO",
            "nameLocation": "3267:6:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3616,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3615,
                  "mutability": "mutable",
                  "name": "_newCOO",
                  "nameLocation": "3290:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 3634,
                  "src": "3274:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:15:17",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3273:25:17"
            },
            "returnParameters": {
              "id": 3619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3316:0:17"
            },
            "scope": 3680,
            "src": "3258:136:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3643,
              "nodeType": "Block",
              "src": "3565:44:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3583:7:17",
                        "subExpression": {
                          "id": 3638,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3511,
                          "src": "3584:6:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3637,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3575:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3575:16:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3641,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:16:17"
                },
                {
                  "id": 3642,
                  "nodeType": "PlaceholderStatement",
                  "src": "3601:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3635,
              "nodeType": "StructuredDocumentation",
              "src": "3464:71:17",
              "text": "@dev Modifier to allow actions only when the contract IS NOT paused"
            },
            "id": 3644,
            "name": "whenNotPaused",
            "nameLocation": "3549:13:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:2:17"
            },
            "src": "3540:69:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3652,
              "nodeType": "Block",
              "src": "3707:43:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3648,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3511,
                        "src": "3725:6:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3647,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3717:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3717:15:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3650,
                  "nodeType": "ExpressionStatement",
                  "src": "3717:15:17"
                },
                {
                  "id": 3651,
                  "nodeType": "PlaceholderStatement",
                  "src": "3742:1:17"
                }
              ]
            },
            "documentation": {
              "id": 3645,
              "nodeType": "StructuredDocumentation",
              "src": "3615:67:17",
              "text": "@dev Modifier to allow actions only when the contract IS paused"
            },
            "id": 3653,
            "name": "whenPaused",
            "nameLocation": "3696:10:17",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3707:0:17"
            },
            "src": "3687:63:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3665,
              "nodeType": "Block",
              "src": "3954:30:17",
              "statements": [
                {
                  "expression": {
                    "id": 3663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3661,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "3964:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 3662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3973:4:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3964:13:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3664,
                  "nodeType": "ExpressionStatement",
                  "src": "3964:13:17"
                }
              ]
            },
            "documentation": {
              "id": 3654,
              "nodeType": "StructuredDocumentation",
              "src": "3756:142:17",
              "text": "@dev Called by any \"C-level\" role to pause the contract. Used only when\n  a bug or exploit is detected and we need to limit damage."
            },
            "functionSelector": "8456cb59",
            "id": 3666,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3656,
                  "name": "onlyCLevel",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3568,
                  "src": "3929:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3929:10:17"
              },
              {
                "id": 3659,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3658,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3644,
                  "src": "3940:13:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "3940:13:17"
              }
            ],
            "name": "pause",
            "nameLocation": "3912:5:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:2:17"
            },
            "returnParameters": {
              "id": 3660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3954:0:17"
            },
            "scope": 3680,
            "src": "3903:81:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3678,
              "nodeType": "Block",
              "src": "4325:81:17",
              "statements": [
                {
                  "expression": {
                    "id": 3676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3674,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3511,
                      "src": "4385:6:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 3675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4394:5:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "4385:14:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3677,
                  "nodeType": "ExpressionStatement",
                  "src": "4385:14:17"
                }
              ]
            },
            "documentation": {
              "id": 3667,
              "nodeType": "StructuredDocumentation",
              "src": "3990:277:17",
              "text": "@dev Unpauses the smart contract. Can only be called by the CEO, since\n  one reason we may pause the contract is when CFO or COO accounts are\n  compromised.\n @notice This is public rather than external so it can be called by\n  derived contracts."
            },
            "functionSelector": "3f4ba83a",
            "id": 3679,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3670,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3669,
                  "name": "onlyCEO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3523,
                  "src": "4306:7:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4306:7:17"
              },
              {
                "id": 3672,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3671,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3653,
                  "src": "4314:10:17"
                },
                "nodeType": "ModifierInvocation",
                "src": "4314:10:17"
              }
            ],
            "name": "unpause",
            "nameLocation": "4281:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:2:17"
            },
            "returnParameters": {
              "id": 3673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:0:17"
            },
            "scope": 3680,
            "src": "4272:134:17",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 3681,
        "src": "294:4114:17"
      }
    ],
    "src": "39:4370:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-03T21:45:46.831Z",
  "devdoc": {
    "author": "Axiom Zen (https://www.axiomzen.co)",
    "details": "See the KittyCore contract documentation to understand how the various contract facets are arranged.",
    "events": {
      "ContractUpgrade(address)": {
        "details": "Emited when contract is upgraded - See README.md for updgrade plan"
      }
    },
    "kind": "dev",
    "methods": {
      "pause()": {
        "details": "Called by any \"C-level\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage."
      },
      "setCEO(address)": {
        "details": "Assigns a new address to act as the CEO. Only available to the current CEO.",
        "params": {
          "_newCEO": "The address of the new CEO"
        }
      },
      "setCFO(address)": {
        "details": "Assigns a new address to act as the CFO. Only available to the current CEO.",
        "params": {
          "_newCFO": "The address of the new CFO"
        }
      },
      "setCOO(address)": {
        "details": "Assigns a new address to act as the COO. Only available to the current CEO.",
        "params": {
          "_newCOO": "The address of the new COO"
        }
      },
      "unpause()": {
        "details": "Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised."
      }
    },
    "title": "A facet of KittyCore that manages special access privileges.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "version": 1
  }
}